{"version":3,"sources":["components/categories/Categories.js","components/editmodal/EditModal.js","components/jobs/AddJob.js","components/jobs/Job.js","components/jobs/Jobs.js","App.js","serviceWorker.js","index.js"],"names":["categories","name","icon","useCategories","getCategoryIcon","category","size","color","cat","find","entry","Provider","value","style","fontSize","intervalUnits","title","milliseconds","hourInMilliseconds","dayInMilliseconds","weekInMilliseconds","EditModal","firestore","closeEditModal","job","React","useState","setName","interval","setInterval","intervalUnit","setIntervalUnit","points","setPoints","setCategory","id","className","onClick","event","target","onSubmit","preventDefault","collection","doc","update","add","completedAt","Date","type","placeholder","onChange","currentTarget","map","key","unit","disabled","delete","AddJob","openCreateModal","Timeleft","completedAtMilliseconds","seconds","nowMilliseconds","getTime","secondDiff","isLate","classes","push","hour","join","getClassName","diff","Math","abs","minute","floor","day","week","getUnitAndTimeLeft","Job","selectedJob","setSelectedJob","openEditModal","Jobs","user","jobs","setJobs","editModalOpen","setEditModalOpen","useEffect","onSnapshot","snapshot","jobItems","docs","data","handleOpenEditModal","undefined","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","SignIn","provider","GoogleAuthProvider","signInWithPopup","UserInfo","src","photoURL","alt","displayName","App","useAuthState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.694c19c3.chunk.js","sourcesContent":["import React from 'react';\r\nimport {IconContext} from 'react-icons';\r\nimport {FaUtensils, FaBed, FaShoppingCart} from 'react-icons/fa';\r\n\r\nconst categories = [\r\n  {\r\n    name: 'Bedroom',\r\n    icon: <FaBed />,\r\n  },\r\n  {\r\n    name: 'Kitchen',\r\n    icon: <FaUtensils />,\r\n  },\r\n  {\r\n    name: 'Shopping',\r\n    icon: <FaShoppingCart />,\r\n  },\r\n]\r\n\r\nexport function useCategories() {\r\n  const getCategoryIcon = (category, size = 24, color = 'black') => {\r\n    const cat = categories.find(entry => entry.name === category);\r\n    if (!cat) return <>404</>;\r\n    return <IconContext.Provider value={{ style: {fontSize: size + 'px', color }}}>\r\n      <div>\r\n        {cat.icon}\r\n      </div>\r\n    </IconContext.Provider>\r\n  }\r\n\r\n\r\n  return { categories, getCategoryIcon };\r\n};","import React from 'react';\r\nimport { useCategories } from '../categories/Categories';\r\nimport './editmodal.scss';\r\n\r\nconst hourInMilliseconds = 3600000;\r\nconst dayInMilliseconds = hourInMilliseconds * 24;\r\nconst weekInMilliseconds = dayInMilliseconds * 7;\r\nconst monthInMilliseconds = weekInMilliseconds * 4;\r\n\r\nconst intervalUnits = [\r\n  { title: 'Hours', milliseconds: hourInMilliseconds },\r\n  { title: 'Days', milliseconds: dayInMilliseconds },\r\n  { title: 'Weeks', milliseconds: weekInMilliseconds },\r\n  { title: 'Months', milliseconds: monthInMilliseconds },\r\n]\r\n\r\nexport default function EditModal({ firestore, closeEditModal, job }) {\r\n  const { categories } = useCategories();\r\n  const [name, setName] = React.useState(job ? job.name : '');\r\n  const [interval, setInterval] = React.useState(job ? job.interval : 1);\r\n  const [intervalUnit, setIntervalUnit] = React.useState(job ? job.intervalUnit : intervalUnits[0]);\r\n  const [points, setPoints] = React.useState(job ? job.points : 1);\r\n  const [category, setCategory] = React.useState(job ? job.category : categories[0].name);\r\n\r\n  const handleNameChange = event => setName(event.currentTarget.value);\r\n  const handleIntervalChange = event => setInterval(event.currentTarget.value);\r\n  const handlePointsChange = event => setPoints(event.currentTarget.value);\r\n  const handleCategoryChange = event => setCategory(event.currentTarget.value);\r\n\r\n  const handleCloseClick = event => {\r\n    if (event.target.id === 'modalBackground') {\r\n      closeEditModal();\r\n    }\r\n  }\r\n\r\n  const handleAddJob = (event) => {\r\n    event.preventDefault();\r\n    if (!name || !interval || !points) return;\r\n    firestore.collection('jobs').add({\r\n        name,\r\n        interval,\r\n        intervalUnit,\r\n        points,\r\n        category,\r\n        completedAt: new Date(),\r\n    });\r\n    closeEditModal();\r\n  };\r\n\r\n  const handleEditJob = (event) => {\r\n    event.preventDefault();\r\n    if (!job || !name || !interval || !points) return;;\r\n    const item = firestore.collection('jobs').doc(job.id);\r\n    item.update({\r\n      name,\r\n      interval,\r\n      intervalUnit,\r\n      points,\r\n      category,\r\n    });\r\n    closeEditModal();\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    if (!job) return;\r\n    const item = firestore.collection('jobs').doc(job.id);\r\n    item.delete();\r\n    closeEditModal();\r\n  };\r\n\r\n  return <div id=\"modalBackground\" className=\"modalBackground\" onClick={handleCloseClick} onSubmit={job ? handleEditJob : handleAddJob}>\r\n    <div className=\"modal\">\r\n      <form>\r\n        <p>{job ? 'Edit job' : 'Create a job'}</p>\r\n        <input type=\"text\" name=\"name\" placeholder=\"Name\" value={name} onChange={handleNameChange}/>\r\n        <p>Category</p>\r\n        <select name=\"category\" value={category} onChange={handleCategoryChange}>\r\n          {categories.map(cat => {\r\n            return <option key={cat.name} value={cat.name}>{cat.name}</option>\r\n          })}\r\n        </select>\r\n        <p>Repeat every</p>\r\n        <input type=\"number\" name=\"interval\" value={interval} onChange={handleIntervalChange} />\r\n        <div className=\"durationButtons\">\r\n          {intervalUnits.map(unit => {\r\n            return <button\r\n              className={unit.title === intervalUnit.title ? 'selected' : ''}\r\n              key={unit.title}\r\n              type=\"button\"\r\n              onClick={() => setIntervalUnit(unit)}>{unit.title}\r\n            </button>;\r\n          })}\r\n        </div>\r\n        <p>Points</p>\r\n        <input type=\"number\" name=\"points\" value={points} onChange={handlePointsChange} />\r\n        {!job && <button type=\"submit\" disabled={!name}>Create</button>}\r\n        {job && <div className=\"dualButtons\">\r\n          <button type=\"subbmit\">Save</button>\r\n          <button type=\"button\" onClick={handleDelete}>Delete</button>\r\n        </div>} \r\n      </form>\r\n      \r\n    </div>\r\n  </div>;\r\n}\r\n","import React from 'react';\r\nimport { IconContext } from 'react-icons';\r\nimport { FaPlus } from 'react-icons/fa';\r\n\r\nexport default function AddJob({ openCreateModal }) {\r\n  return <div className=\"addJob jobCube\" onClick={openCreateModal}>\r\n      <IconContext.Provider value={{ style: {fontSize: '100px', color: \"rgb(0, 123, 255)\"}}}>\r\n        <div>\r\n          <FaPlus />\r\n        </div>\r\n      </IconContext.Provider>\r\n      Add a new job\r\n  </div>;\r\n};","import React from 'react';\r\nimport { useCategories } from '../categories/Categories';\r\n\r\nfunction Timeleft({ job }) {\r\n  const completedAtMilliseconds = job.completedAt.seconds * 1000;\r\n  const nowMilliseconds = new Date().getTime();\r\n  const secondDiff = (completedAtMilliseconds + (job.intervalUnit.milliseconds * job.interval) - nowMilliseconds) / 1000;\r\n  const isLate = secondDiff <= 0;\r\n  \r\n  const minute = 60;\r\n  const hour = minute * 60;\r\n  const day = hour * 24;\r\n  const week = day * 7;\r\n  const month = week * 4;\r\n\r\n  const getUnitAndTimeLeft = () => {\r\n    const diff = Math.abs(secondDiff)\r\n    if (diff < minute) {\r\n      return diff + ' seconds';\r\n    } else if (diff < hour) {\r\n      return Math.floor(diff / minute) + ' minutes';\r\n    } else if (diff < day) {\r\n      return Math.floor(diff / hour) + ' hours';\r\n    } else if (diff < week) {\r\n      return Math.floor(secondDiff / day) + ' days';\r\n    } else if (diff < month) {\r\n      return Math.floor(diff / week) + ' weeks';\r\n    } else {\r\n      return Math.floor(diff / month) + ' months';\r\n    }\r\n  }\r\n\r\n  const getClassName = () => {\r\n    const classes = ['timeleft'];\r\n    if (isLate) classes.push('late');\r\n    if (secondDiff < day) classes.push('soon');\r\n    else classes.push('early');\r\n    return classes.join(' ');\r\n  }\r\n\r\n  return <div className={getClassName()}>\r\n    {!isLate && 'in '}\r\n    {getUnitAndTimeLeft()}\r\n    {isLate && ' late'}\r\n  </div>;\r\n}\r\n\r\nexport default function Job({ job, firestore, selectedJob, setSelectedJob, openEditModal }) {\r\n  const { getCategoryIcon } = useCategories();\r\n\r\n  const handleClick = () => {\r\n    setSelectedJob(job);\r\n  }\r\n\r\n  const markAsDone = () => {\r\n    const item = firestore.collection('jobs').doc(job.id);\r\n    item.update({\r\n      completedAt: new Date(),\r\n    });\r\n  }\r\n\r\n  return <div className=\"jobCube\" onClick={handleClick}>\r\n      {job === selectedJob\r\n        ? <>\r\n            <button className=\"jobBtn\" onClick={markAsDone}>Mark done</button>\r\n            <button className=\"jobBtn\" onClick={openEditModal}>Edit</button>\r\n          </>\r\n        : <>\r\n          <Timeleft job={job} />\r\n          {getCategoryIcon(job.category, 70)}\r\n          {job.name}\r\n        </>\r\n      }\r\n  </div>\r\n};","import React from 'react';\r\nimport EditModal from '../editmodal/EditModal';\r\nimport AddJob from './AddJob';\r\nimport Job from './Job';\r\nimport './jobs.scss';\r\n\r\nfunction Jobs({ firestore, user }) {\r\n\tconst [jobs, setJobs] = React.useState([]);\r\n\tconst [selectedJob, setSelectedJob] = React.useState();\r\n\tconst [editModalOpen, setEditModalOpen] = React.useState(false);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tfirestore.collection('jobs').onSnapshot(snapshot => {\r\n\t\t\tconst jobItems = snapshot.docs.map(doc => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: doc.id,\r\n\t\t\t\t\t...doc.data(),\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tsetJobs(jobItems);\r\n\t\t});\r\n\t}, [firestore]);\r\n\r\n\tconst handleOpenEditModal = () => {\r\n\t\tsetEditModalOpen(true);\r\n\t}\r\n\r\n\tconst handleOpenCreateModal = () => {\r\n\t\tsetSelectedJob(undefined);\r\n\t\tsetEditModalOpen(true);\r\n\t}\r\n\r\n\tconst handleModalClose = () => {\r\n\t\tsetSelectedJob(undefined);\r\n\t\tsetEditModalOpen(false);\r\n\t}\r\n\r\n\treturn <div className=\"jobsContainer\">\r\n\t\t\t<AddJob firestore={firestore} user={user} openCreateModal={handleOpenCreateModal} />\r\n\t\t\t{jobs && jobs.map(job => {\r\n\t\t\t\t\treturn <Job\r\n\t\t\t\t\t\tkey={job.id}\r\n\t\t\t\t\t\tjob={job}\r\n\t\t\t\t\t\tfirestore={firestore}\r\n\t\t\t\t\t\tselectedJob={selectedJob}\r\n\t\t\t\t\t\tsetSelectedJob={setSelectedJob}\r\n\t\t\t\t\t\topenEditModal={handleOpenEditModal} />\r\n\t\t\t})}\r\n\t\t\t{editModalOpen && <EditModal closeEditModal={handleModalClose} firestore={firestore} job={selectedJob} />}\r\n\t</div>;\r\n}\r\n\r\nexport default Jobs;\r\n","import React from 'react';\nimport './App.scss';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport Jobs from './components/jobs/Jobs';\n\nfirebase.initializeApp({\n  apiKey: 'AIzaSyDuLhFU-X9QUqlx0Cw1sn92eAtB7pSOSk0',\n  authDomain: 'housework-a9d38.firebaseapp.com',\n  databaseURL: 'https://housework-a9d38.firebaseio.com',\n  projectId: 'housework-a9d38',\n  storageBucket: 'housework-a9d38.appspot.com',\n  messagingSenderId: '475852222396',\n  appId: '1:475852222396:web:9fa6485a42ba1284e985b9',\n  measurementId: 'G-ZVBWH6CY7R'\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n  return <button onClick={signInWithGoogle}>Log in</button>;\n}\n\nfunction SignOut() {\n  const signOutFromGoogle = () => auth.signOut();\n  return <button onClick={signOutFromGoogle}>Log out</button>;\n}\n\nfunction UserInfo({ user }) {\n  if (!user) return <SignIn />;\n  return <>\n    <img className=\"userImage\" src={user.photoURL} alt={user.displayName} />\n    Welcome {user.displayName}\n  </>;\n}\n\nfunction App() {\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className='App'>\n      <div className=\"header\">\n        <UserInfo user={user} />\n      </div>\n      {user && <Jobs firestore={firestore} user={user} />}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}